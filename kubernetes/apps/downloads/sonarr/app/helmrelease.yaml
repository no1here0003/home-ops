---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: app-template
      version: 3.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5

  values:

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65539

    controllers:
      sonarr:

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          sonarr:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.2.1312@sha256:9c057693302722de595fcf1a61a49c0bc63d08481d438ec08cd69c74fbad8cb7
            env:
              TZ: "America/New_York"
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__LOG_LEVEL: info

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      sonarr:
        controller: sonarr
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: nginx
        hosts:
          - host: &host "sonarr.${INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: sonarr
                  port: http
        tls:
          - hosts:
              - *host
            secretName: sonarr.tls

    persistence:
      config:
        existingClaim: sonarr

      media:
        type: nfs
        server: "${NAS1_ADDR}"
        path: /volume1/Media
        globalMounts:
          - path: /media

      media2:
        type: nfs
        server: "${NAS2_ADDR}"
        path: /volume1/Media2
        globalMounts:
          - path: /media2

      media3:
        type: nfs
        server: "${NAS3_ADDR}"
        path: /volume1/Media
        globalMounts:
          - path: /media3

      temp:
        type: nfs
        server: "${NAS1_ADDR}"
        path: /volume1/temp
        globalMounts:
          - path: /temp_dir

      backups:
        type: nfs
        server: "${NAS2_ADDR}"
        path: /volume1/Kubernetes/sonarr
        globalMounts:
          - path: /config/Backups
