---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: volsync-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65539

    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          radarr:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.4.3.8677@sha256:5af64ec397048c9c86a306b18072aa4c1ce60cd7ce6674c111ef59517ea96ea0

            env:
              TZ: "America/New_York"
              RADARR__PORT: &port 7878
              RADARR__AUTHENTICATION_METHOD: External

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      radarr:
        controller: radarr
        ports:
          http:
            port: 7878

    ingress:
      radarr:
        enabled: true
        className: "nginx"
        hosts:
          - host: &host "radarr.${INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: radarr
                  port: http
        tls:
          - hosts:
              - *host
            secretName: radarr.tls

    persistence:

      config:
        existingClaim: radarr

      media:
        type: nfs
        server: "${NAS1_ADDR}"
        path: /volume1/Media
        globalMounts:
          - path: /media

      backups:
        type: nfs
        server: "${NAS2_ADDR}"
        path: /volume1/Kubernetes/radarr
        globalMounts:
          - path: /config/Backups

      temp:
        type: nfs
        server: "${NAS1_ADDR}"
        path: /volume1/temp
        globalMounts:
          - path: /temp_dir
